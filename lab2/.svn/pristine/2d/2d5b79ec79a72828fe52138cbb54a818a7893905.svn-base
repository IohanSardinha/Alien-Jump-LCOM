#include <lcom/lcf.h>

#include <stdint.h>

int(util_get_LSB)(uint16_t val, uint8_t *lsb) {
    if (lsb == null)
        return 1;

  val = val & 0x00ff;  // mask zero's msb leaving only the 8 lsbits
  *lsb = (uint8_t) val; // tranforms 16 to 8 grabbing only the 8 lsb bits
  return 0;
}

int(util_get_MSB)(uint16_t val, uint8_t *msb) {
    if (msb == null)
        return 1;

    val = (val >> 8) & 0x00ff; // shifts msb to lsb  and masks makes sure that everything behind is 0
    *msb = (uint8_t) val;      // tranforms 16 to 8 grabbing only the 8 lsb bits
    return 0;

}

int (util_sys_inb)(int port, uint8_t *value) {
  uint32_t v;
  int response = sys_inb(port, &v);
  *value = (uint8_t) v;
  return response;
}
